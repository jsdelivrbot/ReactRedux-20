A reducer is just a function that returns a piece of the application state.

How to trace data?
1. Redux serves to construct the application state and React provides the views to display the views to display that state. The 2 libraries are currently disconnected and it's only with the use of 'react-redux' that we get any clear connection between the two.
2. Our application state is generated by 'reducer functions'. (We created reducer_books.js) This always returns an array of books, always the same array...
This array contains a list of objects where each object represents one book and it has just the title of the book for right now.
We added this book's reducer to our combined reducers ('combineReducers({books: BooksReducer})') call inside of reducers/index.js.
The reducer's going to add a key to our global application state called books, where the key is books and the value is whatever gets returned from the boks reducer, wich in this case is our array of books.
Our state is really just always gonna be equal to an object with a key of books and a value of an array of books.

3. We created a component BookList, that started off as a component but then we decided to, that in needed to be aware of our state within our Redux side of the application, promote it to a CONTAINER. We did this by importing {connect} function from 'react-redux' and then we defined mapStateToProps and we hooked our component together with mapStateToProps using the connect function. We chose the component BookList to connect to the Redux store specifically because: Only BookList really cares about the list of books. The App doesn't really care about it; it doesn't need to know about the list of books at all.

4. Finally we make sure that App actually render that BookList here (in components/app.js).

5. Refresh our application on the browser.

Redux generated a state object that contains our books and then mapped that state as props to our component. Because the state was updated through our reducer, our component re-rendered with that list of books.

A CONTAINER IS A NORMAL REACT COMPONENT THAT GETS BONDED TO THE APPLICATION STATE AND WE CONNECT THE TWO, WE MELD THE TWO TOGETHER.
WHENEVER THE APPLICATION STATE CHANGES, THE CONTAINER WILL RE-RENDERED AS WELL

AN ACTION CREATOR is just a function that returns an ACTION, and an ACTION is just an object that flows through all our different REDUCERS.
REDUCERS can use that ACTION to produce a different value for its particular piece of state.